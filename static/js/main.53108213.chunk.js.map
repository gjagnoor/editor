{"version":3,"sources":["components/Editorhtml.js","components/EditorJS.js","components/EditorCSS.js","components/App.js","reportWebVitals.js","index.js"],"names":["EditorHTML","props","useState","value","setValue","className","onBeforeChange","editor","data","setHTML","options","mode","theme","lineNumbers","indentWithTabs","tabSize","lineWrapping","matchBrackets","autoCloseBrackets","autocorrect","extraKeys","require","EditorJS","setJS","EditorCSS","setCSS","useStyles","makeStyles","root","flexGrow","flexWrap","justifyContent","control","padding","spacing","editors","display","App","html","css","js","classes","useEffect","timeout","setTimeout","clearTimeout","srcDoc","Grid","container","item","xs","justify","key","sm","title","referrerPolicy","width","height","style","backgroundColor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.53108213.chunk.js","sourcesContent":["// eslint-disable-next-line\nimport React, {useState} from \"react\";\nimport \"codemirror/lib/codemirror.css\";\nimport \"codemirror/theme/material.css\";\nimport { Controlled as CodeMirror } from 'react-codemirror2';\nimport \"codemirror/addon/hint/show-hint.js\";\nimport \"codemirror/addon/hint/xml-hint.js\";\nimport \"codemirror/addon/hint/show-hint.css\";\nrequire('codemirror/mode/xml/xml');\n\nexport default function EditorHTML (props) {\n    const [value, setValue] = useState(`<div id=\"main\">\n    <h5 id=\"heading\">Welcome to EDITOR</h5>\n    <p>Edit the code above. Result will appear here :) Happy Coding!</p>\n    <button>Click Me!</button>\n</div>`)\n        return (\n            <div className=\"indeditor\">\n                <div className=\"editor_heading\">\n                    <h5 className=\"heading_text\">HTML</h5>\n                </div>\n                <div className=\"editor\">\n                    <CodeMirror \n                        onBeforeChange={(editor, data, value) => {\n                            setValue(value);\n                            props.setHTML(value);\n                        }}\n                        value={value}\n                        className=\"codemirror cmhtml\"\n                        options={{\n                            mode: 'xml',\n                            theme: 'material',\n                            lineNumbers: true,\n                            indentWithTabs: true,\n                            tabSize: 4,\n                            lineWrapping: true,\n                            matchBrackets: true,\n                            autoCloseBrackets: true,\n                            autocorrect: true,\n                            extraKeys: {\n                                \"Ctrl\": \"autocomplete\"\n                            }\n                            \n                        }}\n                    />\n                </div>\n            </div>\n        )\n}","// eslint-disable-next-line\nimport React, {useState} from \"react\";\nimport \"codemirror/lib/codemirror.css\";\nimport \"codemirror/theme/material.css\";\nimport { Controlled as CodeMirror } from 'react-codemirror2'\nimport \"codemirror/addon/hint/show-hint.js\";\nimport \"codemirror/addon/hint/javascript-hint.js\";\nimport \"codemirror/addon/hint/show-hint.css\";\nrequire('codemirror/mode/javascript/javascript');\n\nexport default function EditorJS (props) {\n    const [value, setValue] = useState(`$(\"button\").on(\"click\", () => {\n    alert(\"Yay I work!\");\n});`)\n    return (\n        <div className=\"indeditor\">\n            <div className=\"editor_heading\">\n                <h5 className=\"heading_text\">JS</h5>\n            </div>\n            <div className=\"editor\">\n                <CodeMirror \n                    onBeforeChange={(editor, data, value) => {\n                        setValue(value);\n                        props.setJS(value);\n                    }}\n                    value={value}\n                    className=\"codemirror\"\n                    options={{\n                        mode: 'javascript',\n                        theme: 'material',\n                        lineNumbers: true,\n                        indentWithTabs: true,\n                        tabSize: 4,\n                        lineWrapping: true,\n                        matchBrackets: true,\n                        autoCloseBrackets: true,\n                        autocorrect: true,\n                        extraKeys: {\n                            \"Ctrl\": \"autocomplete\"\n                        }\n                    }}\n                />\n            </div>\n        </div>\n    )\n}","// eslint-disable-next-line\nimport React, { useState } from \"react\";\nimport \"codemirror/lib/codemirror.css\";\nimport \"codemirror/theme/material.css\";\nimport { Controlled as CodeMirror } from 'react-codemirror2';\nimport \"codemirror/addon/hint/show-hint.js\";\nimport \"codemirror/addon/hint/css-hint.js\";\nimport \"codemirror/addon/hint/show-hint.css\";\nrequire('codemirror/mode/css/css.js');\n\n\nexport default function EditorCSS (props) {\n    const [value, setValue] = useState(`h5 {\n    color: pink;\n    font-size: 2em;\n}\n\n#main {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n\nbody {\n    font-family: monospace;\n}\n`)\n        return (\n            <div className=\"indeditor\">\n                <div className=\"editor_heading\">\n                    <h5 className=\"heading_text\">CSS</h5>\n                </div>\n                <div className=\"editor\">\n                    <CodeMirror \n                        onBeforeChange={(editor, data, value) => {\n                            setValue(value);\n                            props.setCSS(value);\n                        }}\n                        value={value}\n                        className=\"codemirror\"\n                        options={{\n                            mode: 'css',\n                            theme: 'material',\n                            lineNumbers: true,\n                            indentWithTabs: true,\n                            tabSize: 4,\n                            lineWrapping: true,\n                            matchBrackets: true,\n                            autoCloseBrackets: true,\n                            autocorrect: true,\n                            extraKeys: {\n                                \"Ctrl\": \"autocomplete\"\n                            }  \n                        }}\n                    />\n                </div>\n            </div>\n        )\n}","// eslint-disable-next-line\nimport React, {useState, useEffect} from \"react\";\nimport EditorHTML from \"./Editorhtml.js\";\nimport EditorJS from \"./EditorJS.js\";\nimport EditorCSS from \"./EditorCSS.js\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    flexWrap: \"wrap\",\n    justifyContent: \"space-evenly\"\n  },\n  control: {\n    padding: theme.spacing(2),\n  },\n  editors: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n  }\n}));\n\nfunction App() {\n  const [html, setHTML] = useState(`\n    <div id=\"main\">\n      <h5 id=\"heading\">Welcome to EDITOR</h5>\n      <p>Edit the code above. Result will appear here :) Happy Coding!</p>\n      <button>Click Me!</button>\n    </div>\n  `);\n  const [css, setCSS] = useState(`\n    h5 {\n      color: pink;\n      font-size: 2em;\n    }\n    #main {\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n    }\n\n    body {\n      font-family: monospace;\n    }\n  `);\n  const [js, setJS] = useState(`\n    $(\"button\").on(\"click\", () => {\n      alert(\"Yay I work!\");\n    });\n  `);\n  const classes = useStyles();\n\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n    /* Source Document Code as function */\n    }, 250);\n    return () => clearTimeout(timeout);\n  }, [html, css, js, /* Source document function call so that the site responds again to new code changes */]);\n\n\n  const srcDoc = `\n    <html>\n      <head>\n        <style>\n          ${css}\n        </style>\n        <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\n      </head>\n      <body>\n        ${html}\n        <script>\n          ${js}\n        </script>\n      </body>\n    </html>\n  `\n  return (\n    <div className=\"App\">\n      <Grid container className={classes.root} spacing={2}>\n        <Grid item xs={12} spacing={2}>\n          <Grid container justify=\"center\" spacing={2}>\n              <Grid key={1} item xs={12} sm={4}>\n                <EditorHTML setHTML={setHTML} /> \n              </Grid>\n            <Grid key={2} item xs={12} sm={4}>\n                <EditorCSS setCSS={setCSS} />\n              </Grid>\n              <Grid key={3} item xs={12} sm={4}>\n                <EditorJS setJS={setJS} />\n              </Grid>\n          </Grid>\n          <Grid container spacing={2}>\n            <iframe\n              srcDoc={srcDoc}\n              title=\"result\"\n              referrerPolicy=\"no-referrer\"\n              width=\"100%\"\n              height=\"350\"\n              style={{backgroundColor: \"white\"}}\n            ></iframe>\n          </Grid>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App.js';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}